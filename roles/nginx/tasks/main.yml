- name: Set tls variable
  set_fact:
    nginx_tls: '{{ nginx_servers|anywithattr("tls") or nginx_monit }}'

- name: Install nginx
  pkgng:
    name: nginx-devel
    state: present
  notify:
    - Start nginx

- name: Copy basic nginx config
  template:
    src: nginx.conf.j2
    dest: /usr/local/etc/nginx/nginx.conf
  notify:
    - Reload nginx

- name: Create sites-enabled directory
  file:
    name: /usr/local/etc/nginx/sites-enabled
    state: directory

- name: Create snippets directory
  file:
    name: /usr/local/etc/nginx/snippets
    state: directory

- name: Create config for default server
  template:
    src: default_server.j2
    dest: /usr/local/etc/nginx/sites-enabled/default
  notify:
    - Reload nginx

- name: Generate Diffie-Hellman parameters (2048 bits)
  openssl_dhparam:
    path: /etc/ssl/dhparams.pem
    size: 2048

- name: Create root directory for servers
  file:
    name: '{{ (item.root|d(item.name)).startswith("/")|ternary(item.root|d(item.name), "/usr/local/www/" + (item.root|d(item.name))) }}'
    state: directory
  with_items: '{{ nginx_servers }}'

- name: Create config for servers
  template:
    src: servers.j2
    dest: /usr/local/etc/nginx/sites-enabled/servers
  notify:
    - Reload nginx

- import_tasks: ipv4_proxy.yml
  when: nginx_proxy_ipv4

- name: Force start/reload nginx and pf so Letsencrypt can contact this server
  meta: flush_handlers

- import_tasks: tls.yml
  when: nginx_tls
