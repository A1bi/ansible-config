- name: Set tls variable
  set_fact:
    nginx_tls: '{{ servers|anywithattr("tls") }}'

- name: Install nginx
  pkgng:
    name: nginx-devel
    state: present
  notify:
    - Start nginx

- name: Copy basic nginx config
  copy:
    src: nginx.conf
    dest: /usr/local/etc/nginx/nginx.conf
  notify:
    - Reload nginx

- name: Create sites-enabled directory
  file:
    name: /usr/local/etc/nginx/sites-enabled
    state: directory

- name: Create snippets directory
  file:
    name: /usr/local/etc/nginx/snippets
    state: directory

- name: Create config for default server
  template:
    src: default_server.j2
    dest: /usr/local/etc/nginx/sites-enabled/default
  notify:
    - Reload nginx

- name: Generate Diffie-Hellman parameters (2048 bits)
  openssl_dhparam:
    path: /etc/ssl/dhparams.pem
    size: 2048

- name: Create root directory for servers
  file:
    name: /usr/local/www/{{ item.name }}
    state: directory
  with_items: '{{ servers }}'

- name: Force start/reload nginx
  meta: flush_handlers

- import_tasks: tls.yml
  when: nginx_tls

- name: Create config for servers
  template:
    src: server.j2
    dest: /usr/local/etc/nginx/sites-enabled/{{ item.service_name|d(item.name) }}
  with_items: '{{ servers }}'
  notify:
    - Reload nginx

- name: Create listen config for servers
  template:
    src: server_listen.j2
    dest: /usr/local/etc/nginx/snippets/{{ item.service_name|d(item.name) }}_listen
  with_items: '{{ servers }}'
  notify:
    - Reload nginx

- name: Create firewall rules
  include_role:
    name: pf
    apply:
      delegate_to: '{{ jail_host|d(inventory_hostname) }}'
  vars:
    set_name: '{{ pf_set_name|d("nginx") }}'
    rules:
      - proto: tcp
        family: '{{ "inet" if proxy_ipv4|length > 0 else "inet6" }}'
        to:
          ports: '{{ (servers|pluck("port", "https") + ["http", "https"])|unique|join(", ") }}'

- name: Add monit service
  include_role:
    name: monit
    apply:
      delegate_to: '{{ jail_host|d(inventory_hostname) }}'
  vars:
    service_only: true
    set_name: nginx
    services:
      - type: process
        name: nginx
        pidfile: /var/run/nginx.pid

- name: Add remote monit service
  include_role:
    name: monit
    apply:
      delegate_to: '{{ remote_monit_host }}'
  vars:
    service_only: true
    set_name: '{{ ansible_hostname }}_remote_http'
    services:
      - type: remote_http
        servers: '{{ servers }}'
        ipv4: '{{ false if remote_monit_skip_ipv4|d(false) else true }}'
  when: 'remote_monit|d(false)'

- include_tasks: ipv4_proxy.yml
  when: jailed == false and proxy_ipv4|length > 0
