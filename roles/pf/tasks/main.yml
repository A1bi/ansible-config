- name: gather facts from all jails
  setup:
  delegate_to: '{{ item }}'
  delegate_facts: true
  ignore_unreachable: true
  loop: '{{ groups[inventory_hostname_short + "_jails"] }}'

- name: Add host to /etc/hosts (IPv6)
  lineinfile:
    path: /etc/hosts
    regexp: ':.*{{ inventory_hostname }}'
    line: "{{ ansible_facts|primaryipv6address }}\t{{ inventory_hostname }}"
  notify:
    - Reload pf

- name: Add host to /etc/hosts (IPv4)
  lineinfile:
    path: /etc/hosts
    regexp: '\..*{{ inventory_hostname }}'
    line: "{{ ansible_default_ipv4.address }}\t{{ inventory_hostname }}"
  notify:
    - Reload pf

- name: Add jails to /etc/hosts (IPv6)
  lineinfile:
    path: /etc/hosts
    regexp: ':.*{{ hostvars[item].inventory_hostname }}'
    line: "{{ hostvars[item].ansible_all_ipv6_addresses[0] if hostvars[item].ansible_all_ipv6_addresses is defined else hostvars[item].jail_ip_addresses[0] }}\t{{ hostvars[item].inventory_hostname }}"
  with_items: '{{ groups[inventory_hostname_short + "_jails"] }}'
  notify:
    - Reload pf

- name: Add jails to /etc/hosts (IPv4)
  lineinfile:
    path: /etc/hosts
    regexp: '\..*{{ hostvars[item].inventory_hostname }}'
    line: "{{ hostvars[item].ansible_all_ipv4_addresses[0]|d(hostvars[item].jail_lo_address) }}\t{{ hostvars[item].inventory_hostname }}"
  when: hostvars[item].ansible_all_ipv4_addresses|d([])|length > 0 or hostvars[item].jail_lo_address is defined
  with_items: '{{ groups[inventory_hostname_short + "_jails"] }}'
  notify:
    - Reload pf

- name: Create pf.conf
  template:
    src: pf.conf.j2
    dest: /etc/pf.conf
  notify:
    - Reload pf
